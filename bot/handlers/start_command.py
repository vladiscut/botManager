from aiogram import types
from loader import dp,bot,ADMIN,tech_chat
from aiogram.fsm.context import FSMContext
from keyboards.inline.inline_keyboards import *
from keyboards.reply.reply_keyboards import *
from states.question_states import questionStates
from geopy.geocoders import Nominatim
geolocator = Nominatim(user_agent="geoapiExercises")



channel_id = '-1001780286274'


#–∞–¥–º–∏–Ω —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–≤–µ—Ç–∞
async def otvet(msg: types.Message):
    chat_id = str(msg.text).split(' ')[1]
    answer = ''
    answer_raw = str(msg.text).split(' ')[2:]
    photo1 = types.InputMediaPhoto(type='photo', media=types.FSInputFile(r'photos/example1.jpg'), caption='–ü—Ä–∏–º–µ—Ä –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è')
    photo2 = types.InputMediaPhoto(type='photo', media=types.FSInputFile(r'photos/example2.jpg'), caption='–ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏')
    media=[photo2,photo1]
    await bot.send_media_group(chat_id, media)
    for w in answer_raw:
        answer += w + ' '
    try:
        await bot.send_message(chat_id, f"‚úâ –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!\n–û—Ç–≤–µ—Ç –æ—Ç —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n\n`{str(answer)}`\n\nüìù –ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–≤–µ–¥–∏—Ç–µ `/–¥–æ–ø–∏–Ω—Ñ–æ –í–∞—à –æ—Ç–≤–µ—Ç`",parse_mode='Markdown')
    except:
        await bot.send_message(chat_id, f"‚úâ –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!\n–û—Ç–≤–µ—Ç –æ—Ç —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∏:\n\n`{str(answer)}`\n\nüìù –ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–≤–µ–¥–∏—Ç–µ `/–¥–æ–ø–∏–Ω—Ñ–æ –í–∞—à –æ—Ç–≤–µ—Ç`")
    await msg.reply('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!')

#–∫–ª–∏–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ø_–∏–Ω—Ñ—ã
async def dop_data(msg: types.Message):
    answer = ''
    answer_raw = str(msg.text).split(' ')[1:]
    for w in answer_raw:
        answer += w + ' '
    try:
        await bot.send_message(tech_chat, f"‚úâ | –£—Ç–æ—á–Ω–µ–Ω–∏–µ\n–û—Ç: {msg.chat.username}\n\n–¢–µ–∫—Å—Ç:\n\n`{str(answer)}`\n\nüìù –ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–≤–µ–¥–∏—Ç–µ `/–æ—Ç–≤–µ—Ç {msg.chat.id} –í–∞—à –æ—Ç–≤–µ—Ç`", parse_mode='Markdown')
    except:
        await bot.send_message(tech_chat, f"‚úâ | –£—Ç–æ—á–Ω–µ–Ω–∏–µ\n–û—Ç: {msg.chat.username}\n\n–¢–µ–∫—Å—Ç:\n\n`{str(answer)}`\n\nüìù –ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–≤–µ–¥–∏—Ç–µ `/–æ—Ç–≤–µ—Ç {msg.chat.id} –í–∞—à –æ—Ç–≤–µ—Ç`")
    await msg.answer(f"–£—Ç–æ—á–Ω–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, —Å–ø–∞—Å–∏–±–æ!‚úÖ")


#—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID
async def get_id_command(msg: types.Message):
      await bot.send_message(chat_id= msg.chat.id,
                        text=msg.chat.id)

#start 
async def start_command(msg: types.Message, state: FSMContext):
      await state.clear()
      kb = three_inline_buttons(['–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å',],(1,))
      await bot.send_message(chat_id= msg.chat.id,
                        text='–ü—Ä–∏–≤–µ—Ç üëã\n–¢—ã –ø–µ—Ä–µ—à—ë–ª –≤ –ë–æ—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä MarketBuyerüòã\n–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µüëá',
                        reply_markup=kb)



### –§–£–ù–ö–¶–ò–ò –í–û–ü–†–û–°–ê ###      
async def newquestion(call: types.CallbackQuery, state: FSMContext):
      kb = get_reply_keyboard(['–û–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é',],(1,))
      await bot.send_message(chat_id= call.message.chat.id,
                  text='–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å, –∫–∞—Å–∞—é—â–∏–π—Å—è –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ãüëê\n–û—Ç–ø—Ä–∞–≤—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏ –∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –ø–µ—Ä–≤—ã–π –æ—Å–≤–æ–±–æ–¥–∏–≤—à–∏–π—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∏—Ç —Ç–µ–±–µ ASAP.‚úçÔ∏è\n–ü—Ä–∏–º–µ—Ä `89001234567, –∑–∞–∫–∞–∑–∞–ª 9–∫–≥. –æ–≥—É—Ä—Ü–æ–≤, –∫–æ–≥–¥–∞ –ø—Ä–∏–¥—É—Ç?`, –Ω–∞–∂–º–∏ —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω',
                  reply_markup=kb, parse_mode='Markdown')
      
      await state.set_state(questionStates.question_send)

async def newquestion_send(msg: types.Message, state: FSMContext):
      print(msg.text)
      question = msg.text
      await bot.send_message(tech_chat, f"‚úâ | –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å\n–û—Ç: {msg.chat.username}\n–í–æ–ø—Ä–æ—Å: `{question}`\n\nüìù –ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤–≤–µ–¥–∏—Ç–µ `/–æ—Ç–≤–µ—Ç {msg.chat.id} –í–∞—à –æ—Ç–≤–µ—Ç`",
							   parse_mode='Markdown', reply_markup=types.ReplyKeyboardRemove)
      await msg.answer(f"–í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É, –º–æ–¥–µ—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏—Ç –≤–∞–º –≤ —ç—Ç–æ–º —á–∞—Ç–µ‚úÖ")
      await state.clear()
### –ö–û–ù–ï–¶ –§–£–ù–ö–¶–ò–ô –í–û–ü–†–û–°–ê ###




